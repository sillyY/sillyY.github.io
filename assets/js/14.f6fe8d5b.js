(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{295:function(e,t,a){"use strict";a.r(t);var s=a(9),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"getcomputedstyle-获取-style"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getcomputedstyle-获取-style","aria-hidden":"true"}},[e._v("#")]),e._v(" getComputedStyle 获取 style")]),e._v(" "),a("p",[e._v("获取 Dom 对象 style,常常会使用原生 JS 中的 dom.style[<属性>]来获取, 但这种方案有时候会是存在缺陷的.\n所以我们往往需要去寻找替代方案.")]),e._v(" "),a("h3",{attrs:{id:"问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题","aria-hidden":"true"}},[e._v("#")]),e._v(" 问题")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// html\n    <div class=\"hidden\">\n        <div class=\"hidden_inner\">\n            隐藏部分\n        </div>\n    </div>\n\n// css\n.hidden {\n    display: none;\n}\n.hidden > .hidden_inner {\n    width: 200px;\n    height: 200px;\n}\n\n// javascript\nvar w1 = document.getElementsByClassName('.hidden').style.width // => VM549:1 Uncaught TypeError: Cannot read property 'width' of undefined\nvar w2 = document.querySelector('.hidden').style.width // => \"\"\n")])])]),a("blockquote",[a("p",[e._v("顾名思义这两种方式无法获取 "),a("code",[e._v("display:none")]),e._v(" 或者 "),a("code",[e._v("visibility: hidden;")]),e._v(" 的 div 的 css 属性.")])]),e._v(" "),a("h3",{attrs:{id:"解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案","aria-hidden":"true"}},[e._v("#")]),e._v(" 解决方案")]),e._v(" "),a("ul",[a("li",[a("ol",[a("li",[e._v("jQuery css方法")])])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("var w3 = $('.hidden').css('width') // => \"1664px\"\n")])])]),a("p",[e._v("但如果只是为了这个去引入jQuery, 会有点浪费资源且影响性能.")]),e._v(" "),a("ul",[a("li",[a("ol",{attrs:{start:"2"}},[a("li",[e._v("getComputedStyle\n好了,总算到了这次的重点.这个真的是一个神器,也是作者最近才发现的.")])])])]),e._v(" "),a("blockquote",[a("p",[e._v("其实jQuery的css也是使用的getComputedStyle,只不过是"),a("code",[e._v("defaultView.getComputedStyle")]),e._v(".关于这点,未找到具体原因,可能只是为了一些别的考虑,毕竟无伤大雅.")])]),e._v(" "),a("h2",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法","aria-hidden":"true"}},[e._v("#")]),e._v(" 语法")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let style = window.getComputedStyle(element, [pseudoElt]);\n")])])]),a("ul",[a("li",[e._v("element"),a("br"),e._v("\n用于获取计算样式的Element。")]),e._v(" "),a("li",[e._v("pseudoElt "),a("el-tag",{attrs:{type:"info"}},[e._v("可选")]),a("br"),e._v("\n指定一个要匹配的伪元素的字符串。必须对普通元素省略（或null）。")],1)]),e._v(" "),a("p",[e._v("所以上述问题的解决方案如下:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('var element = document.querySelector(\'.hidden)\nvar w4 = window.getComputedStyle(element).width // => "1664px"\n')])])]),a("h2",{attrs:{id:"getcomputedstyle-与-style的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getcomputedstyle-与-style的区别","aria-hidden":"true"}},[e._v("#")]),e._v(" getComputedStyle 与 style的区别")]),e._v(" "),a("ul",[a("li",[a("ol",[a("li",[e._v("只读与可读可写"),a("br"),e._v("\n我们都知道style是可读可写的,而getComputedStyle是只读的,意味着我们要修改style还得借助其他手段,这个稍后再讲.")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("var h1 = element.style.height  // 可读\nelement.style.height = 100 + 'px'; // 可写\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("var h2 = window.getComputedStyle(element).height // 只读\n")])])])]),e._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[e._v("获取伪类或伪元素"),a("br"),e._v("\n这点才是getComputedStyle所拥有的独特之处."),a("br"),e._v("\n通过设置getComputedStyle的第二个参数,可以获取获取伪类或伪元素")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("var style = window.getComputedStyle(element, ':first-child')\nvar style2 = window.getComputedStyle(element, '::before')\n")])])])])]),e._v(" "),a("h2",{attrs:{id:"如何修改伪类和伪元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何修改伪类和伪元素","aria-hidden":"true"}},[e._v("#")]),e._v(" 如何修改伪类和伪元素")]),e._v(" "),a("ul",[a("li",[a("ol",[a("li",[e._v("class切换大法来实现伪元素样式的更改")])])]),e._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[e._v("通过CSS styleSheet的 insertRule 方法添加")])])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("document.styleSheets[0].insertRule('.test::before{color:green}',0)\n")])])]),a("p",[e._v("该方法其实就是类似于通过修改存放的style标签,来修改样式")]),e._v(" "),a("ul",[a("li",[a("ol",{attrs:{start:"3"}},[a("li",[e._v("通过data-*属性值来更改伪元素的content值")])])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('// html \n<div class="test" data-text="TEXT" data-color="red"></div>\n\n// css \n.test::before{\n    content: attr(data-text);\n}\n')])])]),a("p",[e._v("通过attr设置data-*的属性值,可以修改content的值.但目前attr只支持content属性,之后可能会支持")]),e._v(" "),a("h2",{attrs:{id:"参考文献"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献","aria-hidden":"true"}},[e._v("#")]),e._v(" 参考文献")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.zhangxinxu.com/wordpress/2012/05/getcomputedstyle-js-getpropertyvalue-currentstyle/",target:"_blank",rel:"noopener noreferrer"}},[e._v("获取元素CSS值之getComputedStyle方法熟悉"),a("OutboundLink")],1),e._v(" "),a("el-tag",{attrs:{type:"success",size:"mini"}},[e._v("张鑫旭")])],1),e._v(" "),a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000003711146#articleHeader6",target:"_blank",rel:"noopener noreferrer"}},[e._v("利用javascript获取并修改伪元素的值"),a("OutboundLink")],1),e._v(" "),a("el-tag",{attrs:{type:"success",size:"mini"}},[e._v("chitanda")])],1),e._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/getComputedStyle",target:"_blank",rel:"noopener noreferrer"}},[e._v("getComputedStyle"),a("OutboundLink")],1),e._v(" "),a("el-tag",{attrs:{type:"success",size:"mini"}},[e._v("MDN")])],1),e._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/CSSStyleSheet/insertRule",target:"_blank",rel:"noopener noreferrer"}},[e._v("insertRule"),a("OutboundLink")],1),e._v(" "),a("el-tag",{attrs:{type:"success",size:"mini"}},[e._v("MDN")])],1)]),e._v(" "),a("Valine")],1)}),[],!1,null,null,null);t.default=r.exports}}]);