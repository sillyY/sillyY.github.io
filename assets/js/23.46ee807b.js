(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{306:function(e,a,t){"use strict";t.r(a);var n=t(9),s=Object(n.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"小程序页面数据通信"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小程序页面数据通信","aria-hidden":"true"}},[e._v("#")]),e._v(" 小程序页面数据通信")]),e._v(" "),t("p",[e._v("小程序其实是由一个个页面构建而成，它与 Vue，React，Angular 等不完全相同，这种是由组件构成.组件间的通信可以通过 event，props 等解决，而页面中的通信就稍微复杂了些许。\n故本文提供几种小程序页面通信方式")]),e._v(" "),t("h2",{attrs:{id:"localstorage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#localstorage","aria-hidden":"true"}},[e._v("#")]),e._v(" localStorage")]),e._v(" "),t("p",[e._v("localStorage 是最容易想到一种方案，简单，持久化。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// pageA\nwx.setStorageSync('key', 'value')\n\n// pageB\nwx.getStorageSync('key')\n")])])]),t("h2",{attrs:{id:"globaldata"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#globaldata","aria-hidden":"true"}},[e._v("#")]),e._v(" GlobalData")]),e._v(" "),t("p",[e._v("小程序全局对象数据，相当于传统页面中的 window")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// pageA\nconst app = getApp();\napp.globalData.key = 'value'\n\n// get\nconst app = getApp()\nvar result = app.globalData.key\n")])])]),t("h2",{attrs:{id:"events"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#events","aria-hidden":"true"}},[e._v("#")]),e._v(" events")]),e._v(" "),t("p",[e._v("小程序 navigateTo 函数的参数存在 events 这个参数，可以通过这个参数与跳转后的下一个页面进行数据通信。")]),e._v(" "),t("blockquote",[t("p",[e._v("基础库 2.7.3 开始支持。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("wx.navigateTo({\n  url: 'test?id=1',\n  events: {\n\n    // 为指定事件添加一个监听器，获取被打开页面传送到当前页面的数据\n    acceptDataFromOpenedPage: function(data) {\n      console.log(data)\n    },\n    someEvent: function(data) {\n      console.log(data)\n    }\n    ...\n  },\n  success: function(res) {\n\n    // 通过eventChannel向被打开页面传送数据\n    res.eventChannel.emit('acceptDataFromOpenerPage', { data: 'test' })\n  }\n})\n\n// test.js\nPage({\n  onLoad: function(option){\n    console.log(option.query)\n    const eventChannel = this.getOpenerEventChannel()\n    eventChannel.emit('acceptDataFromOpenedPage', {data: 'test'});\n    eventChannel.emit('someEvent', {data: 'test'});\n\n    // 监听acceptDataFromOpenerPage事件，获取上一页面通过eventChannel传送到当前页面的数据\n    eventChannel.on('acceptDataFromOpenerPage', function(data) {\n      console.log(data)\n    })\n  }\n})\n")])])]),t("h2",{attrs:{id:"more"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#more","aria-hidden":"true"}},[e._v("#")]),e._v(" More")]),e._v(" "),t("p",[e._v("除此之外，还有一些pubSub(eventBus),westore(小程序官方状态库) 等等。")]),e._v(" "),t("Valine")],1)}),[],!1,null,null,null);a.default=s.exports}}]);